// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String        @unique
  passwordHash  String
  lmsUserId     Int?          @unique
  contextRoles  ContextRole[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  Message Message[]
  ChatRoomParticipant ChatRoomParticipant[]
}

enum RoleKey {
  SITE_ADMIN
  SITE_USER
}

model Role {
  id           Int           @id @default(autoincrement())
  roleKey      RoleKey       @unique
  contextRoles ContextRole[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model ContextRole {
  id        Int      @id @default(autoincrement())
  contextId String?
  role      Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  roleId    Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ChatRoom {
  id            Int                    @id @default(autoincrement())
  name          String
  createdAt     DateTime               @default(now())
  updatedAt     DateTime               @updatedAt

  messages      Message[]
  participants  ChatRoomParticipant[]
}

model Message {
  id          Int       @id @default(autoincrement())
  content     String
  sentAt      DateTime  @default(now())

  sender      User      @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId    Int

  chatRoom    ChatRoom  @relation(fields: [chatRoomId], references: [id], onDelete: Cascade)
  chatRoomId  Int

  @@index([chatRoomId, sentAt])
}

model ChatRoomParticipant {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int

  chatRoom   ChatRoom  @relation(fields: [chatRoomId], references: [id])
  chatRoomId Int

  joinedAt   DateTime  @default(now())

  @@unique([userId, chatRoomId]) // Prevent duplicate entries
}
